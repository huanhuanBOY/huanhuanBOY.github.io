{"version":3,"sources":["components/NavSidebar.jsx","components/BodyWrapper.jsx","components/Layout.jsx","components/datapages/TB_GROUP.js","pages/group.jsx","components/datapages/TB_HERO.js","pages/hero.jsx","pages/home.jsx","components/datapages/TB_SET.js","pages/set.jsx","components/datapages/TB_TEAM.js","pages/team.jsx","components/datapages/TB_PLAYER.js","pages/player.jsx","pages/_routes.jsx","pages/_app.jsx","index.js"],"names":["NavSidebar","history","useHistory","location","useLocation","useState","isSidebarOpen","setIsSidebarOpen","Fragment","onClick","className","activeItemId","pathname","onSelect","itemId","push","items","title","elemBefore","name","BodyWrapper","children","DashboardLayout","style","flexGrow","flexBasis","TB_GROUP","state","data","selectedName","ref","columns","field","width","headerFilter","headerFilterParams","values","this","props","getObjParam","options","height","movableRows","data-custom-attr","paddingLeft","paddingTop","React","Component","GroupPage","groupdata","setgroupdata","sessionid","setsessionid","sessionoption","setsessionoption","GameRecord","useEffect","length","map","item","axios","get","then","marginLeft","fontSize","padding","value","onChange","sessionobj","placeholder","TB_HERO","HeroPage","useStyles","makeStyles","table","minWidth","HomePage","classes","rows","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","key","season_name","scope","start_date","substr","end_date","href","season_id","download","TB_SET","SetPage","TB_TEAM","TeamPage","TB_PLAYER","PlayerPage","feature","type","obj","forEach","element","Routes","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cb2343a.chunk.js","sourcesContent":["/* eslint-disable react/display-name, jsx-a11y/click-events-have-key-events */\nimport { Navigation } from \"react-minimal-side-navigation\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Icon from \"awesome-react-icons\";\nimport React, { useState } from \"react\";\n\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\n\nexport const NavSidebar = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  return (\n    <React.Fragment>\n      {/* Sidebar Overlay */}\n      <div\n        onClick={() => setIsSidebarOpen(false)}\n        className={`fixed inset-0 z-20 block transition-opacity bg-black opacity-50 lg:hidden ${\n          isSidebarOpen ? \"block\" : \"hidden\"\n        }`}\n      />\n\n      {/* <div className=\"absolute right-0\">\n        <a href=\"https://github.com/abhijithvijayan/react-minimal-side-navigation\">\n          View on GitHub\n        </a>\n      </div> */}\n\n      {/* Sidebar */}\n      <div\n        className={`fixed inset-y-0 left-0 z-30 w-64 overflow-y-auto transition duration-300 ease-out transform translate-x-0 bg-white border-r-2 lg:translate-x-0 lg:static lg:inset-0 ${\n          isSidebarOpen ? \"ease-out translate-x-0\" : \"ease-in -translate-x-full\"\n        }`}\n      >\n        <div className=\"flex items-center justify-center mt-10 text-center py-6\">\n          <span className=\"mx-2 text-2xl font-semibold text-black\">\n          Kabigo王者荣耀赛事数据平台\n          </span>\n        </div>\n\n        <Navigation\n          activeItemId={location.pathname}\n          onSelect={({ itemId }) => {\n            history.push(itemId);\n          }}\n          items={[\n            {\n              title: \"主页\",\n              itemId: \"/home\",\n            },\n            {\n              title: \"双英雄搭配\",\n              itemId: \"/group\",\n            },\n            {\n              title: \"英雄赛季\",\n              itemId: \"/hero\"\n            },\n            {\n              title: \"选手赛季\",\n              itemId: \"/player\"\n            },\n            {\n              title: \"参赛队伍\",\n              itemId: \"/team\"\n            },\n            {\n              title: \"对局记录\",\n              itemId: \"/set\"\n            }\n          ]}\n        />\n\n        <div className=\"absolute bottom-0\">\n          <Navigation\n            items={[\n              {\n                title: \"© kabigo\",\n                itemId: \"/brand\"\n              },\n              {\n                title: \"粤ICP备2021004882号\",\n                itemId: \"/brand\",\n                elemBefore: () => <Icon name=\"activity\" />\n              }\n            ]}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nconst BodyWrapper = ({children}) => {\n  return (\n      <div className=\"relative min-h-screen\">\n        <main className=\"w-full min-h-screen\">{children}</main>\n      </div>\n  );\n};\n\nexport default BodyWrapper;\n","import React from \"react\";\n\nimport { NavSidebar } from \"./NavSidebar\";\nimport BodyWrapper from \"./BodyWrapper\";\n\nexport const DashboardLayout = ({ children }) => {\n  return (\n    <BodyWrapper>\n      <div className=\"flex h-screen bg-gray-200\">\n        <NavSidebar />\n\n        <div className=\"flex flex-col flex-1 overflow-hidden\">\n          <main className=\"content\">\n            <section className=\"sm:flex-row flex flex-col flex-1\">\n              <div\n                className=\"content-box\"\n                style={{ flexGrow: 2, flexBasis: \"0%\" }}\n              >\n                {children}\n              </div>\n            </section>\n          </main>\n        </div>\n      </div>\n    </BodyWrapper>\n  );\n};\n","import React from \"react\";\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\nimport MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\n\nimport \"react-tabulator/lib/styles.css\"; \nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\";\n\nimport { ReactTabulator, reactFormatter } from \"react-tabulator\";\n\nclass TB_GROUP extends React.Component {\n  state = {\n    data: [],\n    selectedName: \"\"\n  };\n  ref = null;\n  render() {\n    const options = {\n      height: 5250,\n      movableRows: true\n    };\n    var Hname1 = this.props.getObjParam(this.props.data, \"hero1_name\");\n    var Hname2 = this.props.getObjParam(this.props.data, \"hero2_name\");\n    const columns = [\n      { title: \"英雄名称\", field: \"hero1_name\", width: 150, \n        headerFilter: \"select\", \n        headerFilterParams: { values: Hname1 }\n      },\n      { title: \"英雄名称\", field: \"hero2_name\", width: 150, \n        headerFilter: \"select\",\n        headerFilterParams: { values: Hname2 }\n      },\n      { title: \"对局次数\", field: \"played\", width: 150 },\n      { title: \"胜率\", field: \"win_rate\", width: 150 },\n    ];\n    return (\n      <div>\n        <ReactTabulator\n          ref={(ref) => (this.ref = ref)}\n          columns={columns}\n          data={this.props.data}\n          options={options}\n          data-custom-attr=\"test-custom-attribute\"\n          className=\"custom-css-class\"\n          style={{width:\"100%\", paddingLeft:\"30px\",paddingTop:\"30px\"}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TB_GROUP;\n","import React from 'react';\nimport {DashboardLayout} from '../components/Layout';\nimport axios from \"axios\"\nimport { useEffect, useState} from 'react';\nimport Select from 'react-select';\nimport { Button } from 'react-bootstrap';\nimport TB_GROUP from '../components/datapages/TB_GROUP'\n\nconst GroupPage = (data) => {\n  const [groupdata, setgroupdata] = useState([]);\n  const [sessionid, setsessionid] = useState();\n  const [sessionoption, setsessionoption] = useState([]);\n  const GameRecord = data.GameRecord\n  function seasonChange(sessionobj) {\n    setsessionid(sessionobj)\n  }\n  useEffect(() => {\n    if(GameRecord.length){\n      setsessionoption(GameRecord.map(item => {\n        return {\"label\":item[\"season_name\"], \"value\":item[\"season_id\"]}\n      }))\n    }\n    if(sessionid&&sessionid[\"value\"])\n      axios.get(\"./kaabiigoo/static/\"+  sessionid[\"value\"] + \"_Group.json\").then(data => {\n        setgroupdata(data.data)\n      });\n  }, [GameRecord.length, sessionid]);\n\n  return (\n    <DashboardLayout>\n      {/* <div style={{\n        width: \"200px\",\n        padding: \"13px\",\n        borderRadius: \"10px\",\n        background: \"#198ef8\",\n        float: \"left\",\n        textAlign: \"center\",\n        cursor: \"pointer\",\n        marginRight: \"20px\",\n        marginTop: \"4px\"\n      }}>选择赛季</div> */}\n      <div style={{\n            \"background\": \"white\",\n            \"borderBottom\": \"solid 1px #e2e8f0\"\n      }}>\n        <div style={{width: '700px', marginLeft: \"30px\", fontSize: \"24px\", padding: \"4px\"}}>\n                <Select \n                  value={sessionid}\n                  onChange={seasonChange}\n                  options={sessionoption}\n                  placeholder=\"选择赛季\"\n                />\n        </div>\n      </div>\n      <TB_GROUP data={groupdata} getObjParam={data.getObjParam}/>\n    </DashboardLayout>\n  )\n}\n\nexport default GroupPage;","import React from \"react\";\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\nimport MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\n\nimport \"react-tabulator/lib/styles.css\"; \nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\";\n\nimport { ReactTabulator, reactFormatter } from \"react-tabulator\";\n\nclass TB_HERO extends React.Component {\n  state = {\n    data: [],\n    selectedName: \"\"\n  };\n  ref = null;\n  render() {\n    const options = {\n      height: 5250,\n      movableRows: true\n    };\n    var Hname1 = this.props.getObjParam(this.props.data, \"hero_name\");\n    const columns = [\n      { title: \"英雄名称\", field: \"hero_name\", width: 120, headerFilter: \"select\", headerFilterParams: { values: Hname1 }},\n      { title: \"KDA\", field: \"kda\", width: 120},\n      { title: \"胜率\", field: \"win_rate\", width: 120},\n      { title: \"上场次数\", field: \"played\", width: 120},\n      { title: \"GPM\", field: \"gpm\", width: 120},\n      { title: \"被pick次数\", field: \"pick_cnt\", width: 120},\n      { title: \"被ban\", field: \"ban_cnt\", width: 120},\n      { title: \"平均助攻\", field: \"avg_assist\", width: 120},\n      { title: \"平均被ban\", field: \"avg_ban_seq\", width: 120},\n      { title: \"平均被击杀\", field: \"avg_bekill\", width: 120},\n      { title: \"平均击杀\", field: \"avg_kill\", width: 120},\n      { title: \"平均pick\", field: \"avg_pick_seq\", width: 120},\n    ];\n    return (\n      <div>\n        <ReactTabulator\n          ref={(ref) => (this.ref = ref)}\n          columns={columns}\n          data={this.props.data}\n          options={options}\n          data-custom-attr=\"test-custom-attribute\"\n          className=\"custom-css-class\"\n          style={{width:\"100%\", paddingLeft:\"30px\",paddingTop:\"30px\"}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TB_HERO;\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// import DateEditor from \"react-tabulator/lib/editors/DateEditor\";\n// import MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\n// // import MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\n\n// import \"react-tabulator/lib/styles.css\"; // default theme\n// import \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\n\n// import { ReactTabulator, reactFormatter } from \"react-tabulator\";\n// import axios from \"axios\";\n\n// function SimpleButton(props) {\n//   const rowData = props.cell._cell.row.data;\n//   const cellValue = props.cell._cell.value || \"Edit | Show\";\n//   return <button onClick={() => alert(rowData.name)}>{cellValue}</button>;\n// }\n\n// const colorOptions = {\n//   red: \"red\",\n//   green: \"green\",\n//   yellow: \"yellow\"\n// };\n// const petOptions = [\n//   { id: \"cat\", name: \"cat\" },\n//   { id: \"dog\", name: \"dog\" },\n//   { id: \"fish\", name: \"fish\" }\n// ];\n// // const editableColumns = [\n//   // {\n//   //   title: \"Name1\",\n//   //   field: \"hero1_name\",\n//   //   width: 150,\n//   //   editor: \"input\",\n//   //   headerFilter: \"input\"\n//   // },\n//   // {\n//   //   title: \"Name2\",\n//   //   field: \"hero2_name\",\n//   //   width: 150,\n//   //   editor: \"input\",\n//   //   headerFilter: \"input\"\n//   // },\n//   // {\n//   //   title: \"Age\",\n//   //   field: \"age\",\n//   //   hozAlign: \"left\",\n//   //   formatter: \"progress\",\n//   //   editor: \"progress\"\n//   // },\n//   // {\n//   //   title: \"Favourite Color\",\n//   //   field: \"color\",\n//   //   editor: \"select\",\n//   //   editorParams: {\n//   //     allowEmpty: true,\n//   //     showListOnEmpty: true,\n//   //     values: colorOptions\n//   //   },\n//   //   headerFilter: \"select\",\n//   //   headerFilterParams: { values: colorOptions }\n//   // },\n//   // {\n//   //   title: \"Date Of Birth\",\n//   //   field: \"dob\",\n//   //   sorter: \"date\",\n//   //   editor: DateEditor,\n//   //   editorParams: { format: \"MM/DD/YYYY\" }\n//   // },\n//   // {\n//   //   title: \"Pets\",\n//   //   field: \"pets\",\n//   //   sorter: (a, b) => a.toString().localeCompare(b.toString()),\n//   //   // editor: MultiSelectEditor,\n//   //   editorParams: { values: petOptions },\n//   //   formatter: MultiValueFormatter,\n//   //   formatterParams: { style: \"PILL\" }\n//   // },\n//   // {\n//   //   title: \"Passed?\",\n//   //   field: \"passed\",\n//   //   hozAlign: \"center\",\n//   //   formatter: \"tickCross\",\n//   //   editor: true\n//   // }\n// // ];\n\n// class Home extends React.Component {\n//   state = {\n//     data: [],\n//     selectedName: \"\"\n//   };\n//   ref = null;\n\n//   columns = [\n//     // { title: \"hero1_id\", field: \"hero1_id\", width: 150},\n\n//     { title: \"Name1\", field: \"hero1_name\", width: 150, \n//       editor: \"MultiSelectEditor\", \n//       headerFilterParams: { values: colorOptions },\n//       headerFilter: \"select\"\n//     },\n\n//     // { title: \"hero2_id\", field: \"hero2_id\", width: 150 },\n//     { title: \"Name2\", field: \"hero2_name\", width: 150, editor: \"input\", headerFilter: \"input\"},\n//     { title: \"played\", field: \"played\", width: 150 },\n//     { title: \"win_rate\", field: \"win_rate\", width: 150 },\n    \n//     // { title: \"Age\", field: \"age\", hozAlign: \"left\", formatter: \"progress\" },\n//     // { title: \"Favourite Color\", field: \"color\" },\n//     // { title: \"Date Of Birth\", field: \"dob\" },\n//     // { title: \"Rating\", field: \"rating\", hozAlign: \"center\", formatter: \"star\" },\n//     // {\n//     //   title: \"Passed?\",\n//     //   field: \"passed\",\n//     //   hozAlign: \"center\",\n//     //   formatter: \"tickCross\"\n//     // },\n//     // {\n//     //   title: \"Custom\",\n//     //   field: \"custom\",\n//     //   hozAlign: \"center\",\n//     //   editor: \"input\",\n//     //   formatter: reactFormatter(\n//     //     <SimpleButton\n//     //       onSelect={(name) => {\n//     //         this.setState({ selectedName: name });\n//     //         alert(name);\n//     //       }}\n//     //     />\n//     //   )\n//     // }\n//   ];\n\n//   rowClick = (e, row) => {\n//     console.log(\"ref table: \", this.ref.table); // this is the Tabulator table instance\n//     console.log(`rowClick id: \\${row.getData().id}`, row, e);\n//     this.setState({ selectedName: row.getData().name });\n//   };\n\n//   setData = () => {\n//     this.setState({ data });\n//   };\n\n//   clearData = () => {\n//     this.setState({ data: [] });\n//   };\n\n//   render() {\n//     const options = {\n//       height: 250,\n//       movableRows: true\n//     };\n//     return (\n//       <div>\n//         <ReactTabulator\n//           ref={(ref) => (this.ref = ref)}\n//           columns={this.columns}\n//           data={data}\n//           rowClick={this.rowClick}\n//           options={options}\n//           data-custom-attr=\"test-custom-attribute\"\n//           className=\"custom-css-class\"\n//         />\n//         {/* <i>\n//           Selected Name: <strong>{this.state.selectedName}</strong>\n//         </i>\n\n//         <h3>\n//           Asynchronous data: (e.g. fetch) -{\" \"}\n//           <button onClick={this.setData}>Set Data</button>\n//           <button onClick={this.clearData}>Clear</button>\n//         </h3>\n//         <ReactTabulator \n//           columns={this.columns} \n//           data={this.state.data} \n//         /> */}\n\n//         {/* <h3>Editable Table</h3>\n//         <ReactTabulator\n//           columns={editableColumns}\n//           data={data}\n//           footerElement={<span>Footer</span>}\n//         /> */}\n//       </div>\n//     );\n//   }\n// }\n\n// export default Home;\n","import React from 'react';\nimport {DashboardLayout} from '../components/Layout';\nimport axios from \"axios\"\nimport { useEffect, useState} from 'react';\nimport Select from 'react-select';\nimport { Button } from 'react-bootstrap';\nimport TB_HERO from '../components/datapages/TB_HERO';\n\nconst HeroPage = (data) => {\n  const [groupdata, setgroupdata] = useState([]);\n  const [sessionid, setsessionid] = useState();\n  const [sessionoption, setsessionoption] = useState([]);\n\n  const GameRecord = data.GameRecord\n  function seasonChange(sessionobj) {\n    setsessionid(sessionobj)\n  }\n  useEffect(() => {\n    if(GameRecord.length){\n      setsessionoption(GameRecord.map(item => {\n        return {\"label\":item[\"season_name\"], \"value\":item[\"season_id\"]}\n      }))\n    }\n    if(sessionid&&sessionid[\"value\"])\n      axios.get(\"./kaabiigoo/static/\"+  sessionid[\"value\"] + \"_Hero.json\").then(data => {\n        setgroupdata(data.data)\n      });\n  }, [GameRecord.length, sessionid]);\n\n  return (\n    <DashboardLayout>\n    <div style={{\n            \"background\": \"white\",\n            \"borderBottom\": \"solid 1px #e2e8f0\"\n      }}>\n        <div style={{width: '700px', marginLeft: \"30px\", fontSize: \"24px\", padding: \"4px\"}}>\n                <Select \n                  value={sessionid}\n                  onChange={seasonChange}\n                  options={sessionoption}\n                  placeholder=\"选择赛季\"\n                />\n        </div>\n\n      </div>\n      <TB_HERO data={groupdata} getObjParam={data.getObjParam}/>\n    </DashboardLayout>\n  )\n}\n\nexport default HeroPage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {DashboardLayout} from '../components/Layout';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n// function createData(name, season_id, start_date, end_date) {\n//   return { name, season_id, start_date, end_date};\n// }\n\n\n\nexport default function HomePage(data) {\n  const classes = useStyles();\n  const rows = data.GameRecord\n  // .map(item => {\n  //   return createData(item[\"season_name\"], item[\"season_id\"],  item[\"start_date\"], item[\"end_date\"], \"\")\n  // })\n  // [\n  //   createData('2021 KGL 春季赛', \"\", \"下载\"),\n  //   createData('2020 冬季冠军杯', \"33\", \"\"),\n  //   createData('2020KPL职业联赛秋季赛', \"32\", \"\"),\n  //   createData('2020世界冠军杯', \"31\", \"\"),\n  //   createData('2020KPL职业联赛春季赛', \"30\", \"\"),\n  //   createData('2019冬季冠军杯', \"29\", \"\"),\n  //   createData('2019年KPL职业联赛冬季预选赛', \"28\", \"\"),\n  //   createData('2019KPL职业联赛秋季赛', \"27\", \"\"),\n  //   createData('2019世界冠军杯', \"26\", \"\"),\n  //   createData('2019世界冠军杯.KPL赛区选拔赛', \"25\", \"\"),\n  //   createData('2019年KPL职业联赛夏季预选赛', \"24\", \"\"),\n  //   createData('2019KPL职业联赛春季赛', \"23\", \"\"),\n  //   createData('2018冬季冠军杯', \"22\", \"\"),\n  //   createData('2019KPL职业联赛春季赛.预选赛', \"21\", \"\"),\n  //   createData('2018KPL职业联赛秋季赛', \"20\", \"\"),\n  //   createData('2018冠军杯赛', \"19\", \"\"),\n  //   createData('2018KPL职业联赛秋季赛.预选赛', \"18\", \"\"),\n  //   createData('2018KPL职业联赛春季赛', \"17\", \"\"),\n  //   createData('2018KPL职业联赛春季赛.预选赛', \"16\", \"\"),\n  //   createData('2017KPL职业联赛秋季赛', \"15\", \"\"),\n  //   createData('2017冠军杯赛', \"14\", \"\"),\n  //   createData('2017KPL职业联赛秋季赛.预选赛', \"13\", \"\"),\n  //   createData('2017KPL职业联赛春季赛', \"12\", \"\"),\n  //   createData('2017KPL职业联赛春季赛.预选赛', \"11\", \"\"),\n  //   createData('2016KPL职业联赛', \"10\", \"\"),\n  // ];\n  return (\n    <DashboardLayout>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">赛季名称</TableCell>\n              <TableCell align=\"left\">开始时间</TableCell>\n              <TableCell align=\"left\">结束时间</TableCell>\n              <TableCell align=\"left\">下载</TableCell>\n              <TableCell align=\"left\">下载量</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.season_name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.season_name}\n                </TableCell>\n                <TableCell align=\"left\">{row.start_date.substr(0, 10)}</TableCell>\n                <TableCell align=\"left\">{row.end_date.substr(0, 10)}</TableCell>\n                <TableCell align=\"left\"><a href={\"/kaabiigoo/static/\"+row.season_id+\".zip\"} download>下载</a></TableCell>\n                <TableCell align=\"left\">{1}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </DashboardLayout>\n  );\n}","\nimport React from \"react\";\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\nimport MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\n\nimport \"react-tabulator/lib/styles.css\"; \nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\";\n\nimport { ReactTabulator, reactFormatter } from \"react-tabulator\";\n\nclass TB_SET extends React.Component {\n  state = {\n    data: [],\n    selectedName: \"\"\n  };\n  ref = null;\n  render() {\n    const Tname = this.props.getObjParam(this.props.data, \"team_name\");\n    const Phero = this.props.getObjParam(this.props.data, \"pick_heros\");\n    const Bhero = this.props.getObjParam(this.props.data, \"ban_heros\");\n    const columns = [\n      { title: \"队伍名称\", field: \"team_name\", width: 150, headerFilter: \"select\", headerFilterParams: { values: Tname }},\n      { title: \"胜负\", field: \"is_win\", width: 150 },\n      { title: \"击杀\", field: \"kill_cnt\", width: 150 },\n      { title: \"选择英雄\", field: \"pick_heros\", width: 150, headerFilter: \"select\", headerFilterParams: { values: Phero }},\n      { title: \"禁用英雄\", field: \"ban_heros\", width: 150, headerFilter: \"select\", headerFilterParams: { values: Bhero }},\n      { title: \"红蓝方\", field: \"camp\", width: 150},\n      { title: \"对局时间\", field: \"game_time\", width: 150 },\n    ];\n    const options = {\n      height: 5250,\n      movableRows: true\n    };\n    return (\n      <div>\n        <ReactTabulator\n          ref={(ref) => (this.ref = ref)}\n          columns={columns}\n          data={this.props.data}\n          options={options}\n          data-custom-attr=\"test-custom-attribute\"\n          className=\"custom-css-class\"\n          style={{width:\"100%\", paddingLeft:\"30px\",paddingTop:\"30px\"}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TB_SET;\n","import React from 'react';\nimport {DashboardLayout} from '../components/Layout';\nimport axios from \"axios\"\nimport { useEffect, useState} from 'react';\nimport Select from 'react-select';\nimport { Button } from 'react-bootstrap';\nimport TB_SET from '../components/datapages/TB_SET'\n\nconst SetPage = (data) => {\n  const [groupdata, setgroupdata] = useState([]);\n  const [sessionid, setsessionid] = useState();\n  const [sessionoption, setsessionoption] = useState([]);\n\n  const GameRecord = data.GameRecord\n  function seasonChange(sessionobj) {\n    setsessionid(sessionobj)\n  }\n  useEffect(() => {\n    if(GameRecord.length){\n      setsessionoption(GameRecord.map(item => {\n        return {\"label\":item[\"season_name\"], \"value\":item[\"season_id\"]}\n      }))\n    }\n    if(sessionid&&sessionid[\"value\"])\n      axios.get(\"./kaabiigoo/static/\"+  sessionid[\"value\"] + \"_Set.json\").then(data => {\n        setgroupdata(data.data)\n      });\n  }, [GameRecord.length, sessionid]);\n\n  return (\n    <DashboardLayout>\n    <div style={{\n            \"background\": \"white\",\n            \"borderBottom\": \"solid 1px #e2e8f0\"\n      }}>\n        <div style={{width: '700px', marginLeft: \"30px\", fontSize: \"24px\", padding: \"4px\"}}>\n                <Select \n                  value={sessionid}\n                  onChange={seasonChange}\n                  options={sessionoption}\n                  placeholder=\"选择赛季\"\n                />\n        </div>\n      </div>\n      <TB_SET data={groupdata} getObjParam={data.getObjParam}/>\n    </DashboardLayout>\n  )\n}\n\nexport default SetPage;","\nimport React from \"react\";\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\nimport MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\n\nimport \"react-tabulator/lib/styles.css\"; \nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\";\n\nimport { ReactTabulator, reactFormatter } from \"react-tabulator\";\n\nclass TB_TEAM extends React.Component {\n  state = {\n    data: [],\n    selectedName: \"\"\n  };\n  ref = null;\n  render() {\n    const Tname = this.props.getObjParam(this.props.data, \"team_name\");\n    const Pname = this.props.getObjParam(this.props.data, \"players\");\n    const columns = [\n      { title: \"队伍名称\", field: \"team_name\", width: 150, headerFilter: \"select\", headerFilterParams: { values: Tname }},\n      { title: \"胜率\", field: \"win_rate\", width: 150 },\n      { title: \"对局次数\", field: \"played\", width: 150 },\n      { title: \"胜利场次\", field: \"win_cnt\", width: 150 },\n      { title: \"失败场次\", field: \"lose_cnt\", width: 150 },\n      { title: \"选手\", field: \"players\", width: 150, headerFilter: \"select\", headerFilterParams: { values: Pname }},\n    ];\n    const options = {\n      height: 5250,\n      movableRows: true\n    };\n    return (\n      <div>\n        <ReactTabulator\n          ref={(ref) => (this.ref = ref)}\n          columns={columns}\n          data={this.props.data}\n          options={options}\n          data-custom-attr=\"test-custom-attribute\"\n          className=\"custom-css-class\"\n          style={{width:\"100%\", paddingLeft:\"30px\",paddingTop:\"30px\"}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TB_TEAM;\n","import React from 'react';\nimport {DashboardLayout} from '../components/Layout';\nimport axios from \"axios\"\nimport { useEffect, useState} from 'react';\nimport Select from 'react-select';\nimport { Button } from 'react-bootstrap';\nimport TB_TEAM from '../components/datapages/TB_TEAM'\n\nconst TeamPage = (data) => {\n  const [groupdata, setgroupdata] = useState([]);\n  const [sessionid, setsessionid] = useState();\n  const [sessionoption, setsessionoption] = useState([]);\n\n  const GameRecord = data.GameRecord\n  function seasonChange(sessionobj) {\n    setsessionid(sessionobj)\n  }\n  useEffect(() => {\n    if(GameRecord.length){\n      setsessionoption(GameRecord.map(item => {\n        return {\"label\":item[\"season_name\"], \"value\":item[\"season_id\"]}\n      }))\n    }\n    if(sessionid&&sessionid[\"value\"])\n      axios.get(\"./kaabiigoo/static/\"+  sessionid[\"value\"] + \"_Team.json\").then(data => {\n        setgroupdata(data.data)\n      });\n  }, [GameRecord.length, sessionid]);\n\n  return (\n    <DashboardLayout>\n    <div style={{\n            \"background\": \"white\",\n            \"borderBottom\": \"solid 1px #e2e8f0\"\n      }}>\n        <div style={{width: '700px', marginLeft: \"30px\", fontSize: \"24px\", padding: \"4px\"}}>\n                <Select \n                  value={sessionid}\n                  onChange={seasonChange}\n                  options={sessionoption}\n                  placeholder=\"选择赛季\"\n                />\n        </div>\n      </div>\n      <TB_TEAM data={groupdata} getObjParam={data.getObjParam}/>\n    </DashboardLayout>\n  )\n}\n\nexport default TeamPage;","import React from \"react\";\nimport DateEditor from \"react-tabulator/lib/editors/DateEditor\";\nimport MultiValueFormatter from \"react-tabulator/lib/formatters/MultiValueFormatter\";\nimport MultiSelectEditor from \"react-tabulator/lib/editors/MultiSelectEditor\";\n\nimport \"react-tabulator/lib/styles.css\"; \nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\";\n\nimport { ReactTabulator, reactFormatter } from \"react-tabulator\";\n\nclass TB_PLAYER extends React.Component {\n  state = {\n    data: [],\n    selectedName: \"\"\n  };\n  ref = null;\n  render() {\n    const Pname = this.props.getObjParam(this.props.data, \"name\");\n    const columns = [\n      { title: \"选手名称\", field: \"name\", width: 120, headerFilter: \"select\", headerFilterParams: { values: Pname }},\n      { title: \"KDA\", field: \"kda\", width: 120},\n      { title: \"胜率\", field: \"win_rate\", width: 120},\n      { title: \"上场次数\", field: \"played\", width: 120},\n      { title: \"GPM\", field: \"gpm\", width: 120},\n      { title: \"平均助攻\", field: \"avg_assist\", width: 120},\n      { title: \"平均被击杀\", field: \"avg_bekill\", width: 120},\n      { title: \"平均击杀\", field: \"avg_kill\", width: 120},\n      { title: \"总击杀\", field: \"total_kill\", width: 120},\n      { title: \"XPM\", field: \"xpm\", width: 120},\n      { title: \"评分\", field: \"rating\", width: 120},\n    ];\n    const options = {\n      height: 5250,\n      movableRows: true\n    };\n    return (\n      <div>\n        <ReactTabulator\n          ref={(ref) => (this.ref = ref)}\n          columns={columns}\n          data={this.props.data}\n          options={options}\n          data-custom-attr=\"test-custom-attribute\"\n          className=\"custom-css-class\"\n          style={{width:\"100%\", paddingLeft:\"30px\",paddingTop:\"30px\"}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TB_PLAYER;\n","import React from 'react';\nimport {DashboardLayout} from '../components/Layout';\nimport axios from \"axios\"\nimport { useEffect, useState} from 'react';\nimport Select from 'react-select';\nimport { Button } from 'react-bootstrap';\nimport TB_PLAYER from '../components/datapages/TB_PLAYER'\n\nconst PlayerPage = (data) => {\n  const [groupdata, setgroupdata] = useState([]);\n  const [sessionid, setsessionid] = useState();\n  const [sessionoption, setsessionoption] = useState([]);\n\n  const GameRecord = data.GameRecord\n  function seasonChange(sessionobj) {\n    setsessionid(sessionobj)\n  }\n  useEffect(() => {\n    if(GameRecord.length){\n      setsessionoption(GameRecord.map(item => {\n        return {\"label\":item[\"season_name\"], \"value\":item[\"season_id\"]}\n      }))\n    }\n    if(sessionid&&sessionid[\"value\"])\n      axios.get(\"./kaabiigoo/static/\"+  sessionid[\"value\"] + \"_Player.json\").then(data => {\n        setgroupdata(data.data)\n      });\n  }, [GameRecord.length, sessionid]);\n\n  return (\n    <DashboardLayout>\n    <div style={{\n            \"background\": \"white\",\n            \"borderBottom\": \"solid 1px #e2e8f0\"\n      }}>\n        <div style={{width: '700px', marginLeft: \"30px\", fontSize: \"24px\", padding: \"4px\"}}>\n                <Select \n                  value={sessionid}\n                  onChange={seasonChange}\n                  options={sessionoption}\n                  placeholder=\"选择赛季\"\n                />\n        </div>\n      </div>\n      <TB_PLAYER data={groupdata} getObjParam={data.getObjParam}/>\n    </DashboardLayout>\n  )\n}\n\nexport default PlayerPage;","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport GroupPage from \"./group\";\nimport HeroPage from \"./hero\";\nimport HomePage from \"./home\";\nimport SetPage from \"./set\";\nimport TeamPage from \"./team\";\nimport PlayerPage from \"./player\";\n\nfunction getObjParam(data, feature, type){\n  if(type){\n    const opt = data.map(item => {\n      return { \"id\": item[feature], \"name\": item[feature] }\n    })\n    return opt\n  }else{\n    let obj = {}\n    data.forEach(element => {\n      obj[element[feature]] = element[feature]\n    });\n    return obj\n  }\n}\n\nconst Routes = (data) => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/group\">\n          <GroupPage GameRecord={data.GameRecord} getObjParam={getObjParam}/>\n        </Route>\n        <Route path=\"/hero\">\n          <HeroPage GameRecord={data.GameRecord} getObjParam={getObjParam}/>\n        </Route>\n        <Route path=\"/set\">\n          <SetPage GameRecord={data.GameRecord} getObjParam={getObjParam}/>\n        </Route>\n        <Route path=\"/team\">\n          <TeamPage GameRecord={data.GameRecord} getObjParam={getObjParam}/>\n        </Route>\n        <Route path=\"/player\">\n          <PlayerPage GameRecord={data.GameRecord} getObjParam={getObjParam}/>\n        </Route>\n        <Route path=\"/\">\n          <HomePage GameRecord={data.GameRecord} getObjParam={getObjParam}/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\n\nimport Routes from \"./_routes\";\n\nconst App = (data) => {\n  return <Routes GameRecord={data.GameRecord}/>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/_app\";\nimport \"./styles/main.bundle.css\";\nconst GameRecord = [\n  { \"end_date\": \"2021-01-24 23:59:59\", \"season_id\": \"33\", \"season_name\": \"2020冬季冠军杯\", \"sesaon_icon\": \"2020冬季冠军杯.icon\", \"start_date\": \"2021-01-07 00:00:00\" },\n  { \"end_date\": \"2020-12-16 23:59:59\", \"season_id\": \"32\", \"season_name\": \"2020KPL职业联赛秋季赛\", \"sesaon_icon\": \"2020KPL职业联赛秋季赛.icon\", \"start_date\": \"2020-09-16 00:00:00\" },\n  { \"end_date\": \"2020-08-16 23:59:59\", \"season_id\": \"31\", \"season_name\": \"2020世界冠军杯\", \"sesaon_icon\": \"2020世界冠军杯.icon\", \"start_date\": \"2020-06-22 00:00:00\" },\n  { \"end_date\": \"2020-06-13 23:59:59\", \"season_id\": \"30\", \"season_name\": \"2020KPL职业联赛春季赛\", \"sesaon_icon\": \"2020KPL职业联赛春季赛.icon\", \"start_date\": \"2020-03-18 00:00:00\" },\n  { \"end_date\": \"2020-01-06 23:59:59\", \"season_id\": \"29\", \"season_name\": \"2019冬季冠军杯\", \"sesaon_icon\": \"2019冬季冠军杯.icon\", \"start_date\": \"2019-12-21 00:00:00\" },\n  { \"end_date\": \"2019-12-06 23:59:59\", \"season_id\": \"28\", \"season_name\": \"2019年KPL职业联赛冬季预选赛\", \"sesaon_icon\": \"2019年KPL职业联赛冬季预选赛.icon\", \"start_date\": \"2019-12-03 00:00:00\" },\n  { \"end_date\": \"2019-12-14 23:59:59\", \"season_id\": \"27\", \"season_name\": \"2019KPL职业联赛秋季赛\", \"sesaon_icon\": \"2019KPL职业联赛秋季赛.icon\", \"start_date\": \"2019-09-11 00:00:00\" },\n  { \"end_date\": \"2019-08-10 23:59:59\", \"season_id\": \"26\", \"season_name\": \"2019世界冠军杯\", \"sesaon_icon\": \"2019世界冠军杯.icon\", \"start_date\": \"2019-07-10 00:00:00\" },\n  { \"end_date\": \"2019-06-09 23:59:59\", \"season_id\": \"25\", \"season_name\": \"2019世界冠军杯.KPL赛区选拔赛\", \"sesaon_icon\": \"2019世界冠军杯.KPL赛区选拔赛.icon\", \"start_date\": \"2019-06-06 00:00:00\" },\n  { \"end_date\": \"2019-06-01 23:59:59\", \"season_id\": \"24\", \"season_name\": \"2019年KPL职业联赛夏季预选赛\", \"sesaon_icon\": \"2019年KPL职业联赛夏季预选赛.icon\", \"start_date\": \"2019-05-27 00:00:00\" },\n  { \"end_date\": \"2019-06-15 23:59:59\", \"season_id\": \"23\", \"season_name\": \"2019KPL职业联赛春季赛\", \"sesaon_icon\": \"2019KPL职业联赛春季赛.icon\", \"start_date\": \"2019-03-06 00:00:00\" },\n  { \"end_date\": \"2019-01-13 23:59:59\", \"season_id\": \"22\", \"season_name\": \"2018冬季冠军杯\", \"sesaon_icon\": \"2018冬季冠军杯.icon\", \"start_date\": \"2018-12-28 00:00:00\" },\n  { \"end_date\": \"2018-11-28 23:59:59\", \"season_id\": \"21\", \"season_name\": \"2019KPL职业联赛春季赛.预选赛\", \"sesaon_icon\": \"2019KPL职业联赛春季赛.预选赛.icon\", \"start_date\": \"2018-11-19 00:00:00\" },\n  { \"end_date\": \"2018-12-22 23:59:59\", \"season_id\": \"20\", \"season_name\": \"2018KPL职业联赛秋季赛\", \"sesaon_icon\": \"2018KPL职业联赛秋季赛.icon\", \"start_date\": \"2018-09-12 00:00:00\" },\n  { \"end_date\": \"2018-08-11 23:59:59\", \"season_id\": \"19\", \"season_name\": \"2018冠军杯赛\", \"sesaon_icon\": \"2018冠军杯赛.icon\", \"start_date\": \"2018-08-01 00:00:00\" },\n  { \"end_date\": \"2018-07-26 23:59:59\", \"season_id\": \"18\", \"season_name\": \"2018KPL职业联赛秋季赛.预选赛\", \"sesaon_icon\": \"2018KPL职业联赛秋季赛.预选赛.icon\", \"start_date\": \"2018-07-16 00:00:00\" },\n  { \"end_date\": \"2018-07-09 23:59:59\", \"season_id\": \"17\", \"season_name\": \"2018KPL职业联赛春季赛\", \"sesaon_icon\": \"2018KPL职业联赛春季赛.icon\", \"start_date\": \"2018-03-21 00:00:00\" },\n  { \"end_date\": \"2018-01-12 23:59:59\", \"season_id\": \"16\", \"season_name\": \"2018KPL职业联赛春季赛.预选赛\", \"sesaon_icon\": \"2018KPL职业联赛春季赛.预选赛.icon\", \"start_date\": \"2018-01-01 00:00:00\" },\n  { \"end_date\": \"2017-12-23 23:59:59\", \"season_id\": \"15\", \"season_name\": \"2017KPL职业联赛秋季赛\", \"sesaon_icon\": \"2017KPL职业联赛秋季赛.icon\", \"start_date\": \"2017-09-21 00:00:00\" },\n  { \"end_date\": \"2017-08-19 23:59:59\", \"season_id\": \"14\", \"season_name\": \"2017冠军杯赛\", \"sesaon_icon\": \"2017冠军杯赛.icon\", \"start_date\": \"2017-07-27 00:00:00\" },\n  { \"end_date\": \"2017-07-02 23:59:59\", \"season_id\": \"13\", \"season_name\": \"2017KPL职业联赛秋季赛.预选赛\", \"sesaon_icon\": \"2017KPL职业联赛秋季赛.预选赛.icon\", \"start_date\": \"2017-06-19 00:00:00\" },\n  { \"end_date\": \"2017-07-08 23:59:59\", \"season_id\": \"12\", \"season_name\": \"2017KPL职业联赛春季赛\", \"sesaon_icon\": \"2017KPL职业联赛春季赛.icon\", \"start_date\": \"2017-03-24 00:00:00\" },\n  { \"end_date\": \"2017-01-20 23:59:59\", \"season_id\": \"11\", \"season_name\": \"2017KPL职业联赛春季赛.预选赛\", \"sesaon_icon\": \"2017KPL职业联赛春季赛.预选赛.icon\", \"start_date\": \"2016-12-23 00:00:00\" },\n  { \"end_date\": \"2016-12-18 23:59:59\", \"season_id\": \"10\", \"season_name\": \"2016KPL职业联赛\", \"sesaon_icon\": \"2016KPL职业联赛.icon\", \"start_date\": \"2016-09-17 00:00:00\" }\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App GameRecord={GameRecord}/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}